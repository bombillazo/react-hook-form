name: Auto Tag & Publish Forked Package

on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Dependencies
        uses: ./.github/actions/install-dependencies

      - name: Read base version from package.json
        id: version
        run: |
          BASE_VERSION=$(node -p "require('./package.json').version")
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT

      - name: Calculate next tag
        id: tag
        run: |
          BASE_VERSION="${{ steps.version.outputs.base_version }}"
          TAG_PREFIX="v${BASE_VERSION}-plus"
          EXISTING_TAGS=$(git tag -l "${TAG_PREFIX}.*")

          if [ -z "$EXISTING_TAGS" ]; then
            INDEX=0
          else
            LAST_INDEX=$(echo "$EXISTING_TAGS" | sed -E "s/^${TAG_PREFIX}\.//" | sort -n | tail -n1)
            INDEX=$((LAST_INDEX + 1))
          fi

          FINAL_TAG="${TAG_PREFIX}.${INDEX}"
          echo "Final tag: $FINAL_TAG"
          echo "tag=$FINAL_TAG" >> $GITHUB_OUTPUT

      - name: Update version in package.json for publish
        run: |
          VERSION="${{ steps.tag.outputs.tag }}"
          VERSION=${VERSION#v} # strip 'v' prefix
          node -e "const fs=require('fs'); const pkg=require('./package.json'); pkg.version='$VERSION'; fs.writeFileSync('./package.json', JSON.stringify(pkg,null,2));"

      - name: Build package
        run: pnpm build

      - name: Publish to npm
        run: pnpm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push the generated tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git tag ${{ steps.tag.outputs.tag }}
          git push origin ${{ steps.tag.outputs.tag }}

      - name: Generate changelog from last tag
        id: changelog
        run: |
          LAST_TAG=$(git tag --sort=-creatordate | grep -v "${{ steps.tag.outputs.tag }}" | head -n1)
          LOG=$(git log --merges --pretty=format:'- %s ([%h](https://github.com/${{ github.repository }}/commit/%H))' $LAST_TAG..HEAD || echo "No PRs since $LAST_TAG")
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$LOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        run: |
          gh release create "${{ steps.tag.outputs.tag }}" \
            --title "${{ steps.tag.outputs.tag }}" \
            --notes "${{ steps.changelog.outputs.log }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
